{"version":3,"sources":["components/Loader.js","components/Login.js","actions/loginActions.js","actions/types.js","components/Categories.js","actions/productActions.js","components/Rating.js","components/Product.js","components/ProductsList.js","components/CartItem.js","actions/cartActions.js","components/Cart.js","components/Error404.js","components/ProductDetails.js","components/Router.js","components/Storefront.js","serviceWorker.js","reducers/loginReducer.js","reducers/productsReducer.js","reducers/loaderReducer.js","reducers/statesReducer.js","reducers/cartReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["Loader","react_default","a","createElement","className","concat","this","props","isLoading","Component","connect","state","loader","Login","onChange","e","preventDefault","target","name","_this","changeUsername","value","changePassword","onSubmit","post","username","login","password","logIN","history","isLoggedIn","error","type","react_router_dom","to","store","states","loggedInError","dispatch","updatedUsername","updatedPassword","redirect","setTimeout","push","Categories","postCategories","categories","map","category","key","onClick","filter","products","productsList","filterName","Rating","fullStars","Math","floor","rating","String","fromCharCode","Product","id","pathname","redirectToProduct","product","alt","src","img","Rating_Rating","title","price","ProductsList","fetchProducts","fetchCategories","postProducts","filteredProducts","includes","components_Product","components_Categories","fetch","then","res","json","data","updatedProducts","updatedCategories","CartItem","index","updateQuantity","item","deleteCartItem","defaultValue","quantity","changeQuantity","delete","qty","Cart","cartItems","cart","indexOf","components_CartItem","returnToProducts","Error404","ProductDetails","Object","assign","add","message","Number","match","params","undefined","description","addToCart","Router","react_router","path","component","exact","withRouter","Storefront","links","components_Loader","components_Router","React","Boolean","window","location","hostname","initialState","combineReducers","arguments","length","action","objectSpread","toConsumableArray","newCart","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_Storefront","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gPAGMA,mLAGE,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAC,QAAsC,IAAzBC,KAAKC,MAAMC,UAAqB,OAAS,SAApE,yBALKC,aAkBNC,cAFS,SAACC,GAAD,OAAYA,EAAMC,QAEF,GAAzBF,CAA6BV,UCftCa,6MAEFC,SAAW,SAACC,GACRA,EAAEC,iBACgB,aAAlBD,EAAEE,OAAOC,KAAsBC,EAAKZ,MAAMa,eAAeL,EAAEE,OAAOI,OAASF,EAAKZ,MAAMe,eAAeP,EAAEE,OAAOI,UAGlHE,SAAW,SAACR,GACRA,EAAEC,iBACF,IAAMQ,EAAO,CACTC,SAAUN,EAAKZ,MAAMmB,MAAMD,SAC3BE,SAAUR,EAAKZ,MAAMmB,MAAMC,UAG/BR,EAAKZ,MAAMqB,MAAMJ,EAAML,EAAKZ,MAAMsB,kFAOlC,OAA+B,IAA1BvB,KAAKC,MAAMuB,WAER7B,EAAAC,EAAAC,cAAA,OAAKC,UAAS,mBACVH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAMoB,SAAUjB,KAAKiB,UACjBtB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAS,OAAAC,QAA8B,IAArBC,KAAKC,MAAMwB,MAAiB,OAAS,SAA1D,wDAIJ9B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,OAAOd,KAAK,WAAWJ,SAAUR,KAAKQ,SAAUO,MAAOf,KAAKC,MAAMkB,YAElFxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,WAAWd,KAAK,WAAWJ,SAAUR,KAAKQ,SAAUO,MAAOf,KAAKC,MAAMoB,YAEtF1B,EAAAC,EAAAC,cAAA,UAAQ6B,KAAK,UAAb,YAMR/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,4CAC6CH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,aAAT,wBAD7C,gBA9CAzB,aAgELC,cANS,SAACyB,GAAD,MAAY,CAChCT,MAAOS,EAAMT,MACbI,WAAYK,EAAMC,OAAON,WACzBC,MAAOI,EAAMC,OAAOC,gBAGgB,CAAEjB,eC1CZ,SAAAK,GAAQ,OAAI,SAAAa,GACtCA,EAAS,CACLN,KCzBgB,WD0BhBO,gBAAiBd,MDuCiCH,eCnC5B,SAAAK,GAAQ,MAAK,CACvCK,KC9BoB,WD+BpBQ,gBAAiBb,IDiCqDC,MCpErD,SAACJ,EAAMiB,GAAP,OAAoB,SAAAH,GAErCA,EAAS,CAAEN,KCOc,kBDNzBU,WAAW,WACgB,UAAlBlB,EAAKC,UAA0C,aAAlBD,EAAKG,UAInCW,EAAS,CACLN,KCPK,UDSTS,EAASE,KAAK,cAGdL,EAAS,CAACN,KCTK,QDScD,OAAO,IAKxCO,EAAS,CAAEN,KCTS,kBDYrB,SD8CQtB,CAAoEG,GGjE7E+B,iOAOO,IAAAzB,EAAAb,KACL,IAA+B,IAA1BA,KAAKC,MAAMuB,WAAsB,CAClC,IAAMe,EAAiBvC,KAAKC,MAAMuC,WAAWC,IAAI,SAAAC,GAAQ,OACrD/C,EAAAC,EAAAC,cAAA,OAAK8C,IAAKD,EAAU5C,UAAS,YACzBH,EAAAC,EAAAC,cAAA,UAAQ+C,QAAS,kBAAM/B,EAAKZ,MAAM4C,OAAOH,IAAW5C,UAAW,iBAAkB4C,MAIzF,OACI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAS,cACVH,EAAAC,EAAAC,cAAA,uBAGC0C,EACD5C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBACZH,EAAAC,EAAAC,cAAA,UAAQ+C,QAAS,kBAAM/B,EAAKZ,MAAM4C,OAAO,SAAS/C,UAAW,iBAA7D,oBAKZ,OAAO,YA3BMK,aA2CVC,cATS,SAACyB,GACrB,MAAO,CACHiB,SAAUjB,EAAMiB,SAASC,aACzBP,WAAYX,EAAMiB,SAASN,WAC3BhB,WAAYK,EAAMC,OAAON,aAKO,CAAEqB,OCvBpB,SAAAG,GAAU,OAAI,SAAAhB,GAChCA,EAAS,CACLN,KFzBc,SE0BdsB,WAAYA,ODoBL5C,CAAqCkC,GE7C/BW,mLAIb,IAAMC,EAAaC,KAAKC,MAAMpD,KAAKC,MAAMoD,SAAYrD,KAAKC,MAAMoD,OAAS,EAAK,GAAK,EAAI,GAEvF,OACI1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAWoD,GAAa,EAAI,YAAc,cAC3CI,OAAOC,aAAa,OAEzB5D,EAAAC,EAAAC,cAAA,QAAMC,UAAWoD,GAAa,EAAI,YAAc,cAC3CI,OAAOC,aAAa,OAEzB5D,EAAAC,EAAAC,cAAA,QAAMC,UAAWoD,GAAa,EAAI,YAAc,cAC3CI,OAAOC,aAAa,OAEzB5D,EAAAC,EAAAC,cAAA,QAAMC,UAAWoD,GAAa,EAAI,YAAc,cAC3CI,OAAOC,aAAa,OAEzB5D,EAAAC,EAAAC,cAAA,QAAMC,UAAWoD,GAAa,EAAI,YAAc,cAC3CI,OAAOC,aAAa,eArBLpD,aC2BrBqD,4LAxBOC,GAEdzD,KAAKC,MAAMsB,QAAQc,KAAK,CACpBqB,SAAU,aAAaD,EACvBA,GAAIA,qCAOH,IAAA5C,EAAAb,KACL,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAa8C,QAAS,kBAAM/B,EAAK8C,kBAAkB9C,EAAKZ,MAAM2D,QAAQH,MAChF9D,EAAAC,EAAAC,cAAA,OAAKgE,IAAK,UAAW/D,UAAS,aAAgBgE,IAAK9D,KAAKC,MAAM2D,QAAQG,MACtEpE,EAAAC,EAAAC,cAACmE,EAAD,CAAQX,OAAQrD,KAAKC,MAAM2D,QAAQP,SACnC1D,EAAAC,EAAAC,cAAA,MAAIC,UAAW,iBAAkBE,KAAKC,MAAM2D,QAAQK,OACpDtE,EAAAC,EAAAC,cAAA,aAAKG,KAAKC,MAAM2D,QAAQM,eAnBlB/D,aCKhBgE,8LAKEnE,KAAKC,MAAMmE,gBACXpE,KAAKC,MAAMoE,mDAGN,IACDC,EADCzD,EAAAb,KAEL,IAA+B,IAA1BA,KAAKC,MAAMuB,WAAsB,CAE9B,IAAI+C,EAAmB,GAY3B,OAXIvE,KAAKC,MAAM6C,SAASL,IAAI,SAAAmB,GAIpB,OAHKA,EAAQlB,SAAS8B,SAAS3D,EAAKZ,MAAM4C,SACtC0B,EAAiBlC,KAAKuB,GAEnB,KAGXU,EAAeC,EAAiB9B,IAAI,SAAAmB,GAAO,OACvCjE,EAAAC,EAAAC,cAAC4E,EAAD,CAAS9B,IAAKiB,EAAQH,GAAIG,QAASA,EAASrC,QAASV,EAAKZ,MAAMsB,YAIpE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAS,mBAAb,YAIAH,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAA,OAAKC,UAAS,gBACTwE,IAKb,OACI3E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,kBACmBH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,UAAT,aADnB,gBAxCOzB,aAkEZC,cAVS,SAACyB,GACrB,MAAO,CACHiB,SAAUjB,EAAMiB,SAASC,aACzBP,WAAYX,EAAMiB,SAASN,WAC3BK,OAAQhB,EAAMiB,SAASD,OACvBrB,WAAYK,EAAMC,OAAON,aAKO,CAAE4C,cHzEb,kBAAM,SAAApC,GAC/B2C,MAAM,qEACDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACF/C,EAAS,CACLN,KFPc,iBEQdsD,gBAAiBD,QGmEwBV,gBH9D1B,kBAAM,SAAArC,GACjC2C,MAAM,uEACDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACF/C,EAAS,CACLN,KFjBgB,mBEkBhBuD,kBAAmBF,SGwDpB3E,CAA6D+D,GCtEtEe,yLAGazE,EAAG0E,GACd1E,EAAEC,iBACFV,KAAKC,MAAMmF,eAAe3E,EAAEE,OAAOI,MAAOoE,kCAGvC1E,EAAG4E,GACN5E,EAAEC,iBACFV,KAAKC,MAAMqF,eAAeD,oCAIrB,IAAAxE,EAAAb,KACL,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aACVH,EAAAC,EAAAC,cAAA,OAAKgE,IAAK,OAAQ/D,UAAS,aAAgBgE,IAAK9D,KAAKC,MAAMoF,KAAKtB,MAChEpE,EAAAC,EAAAC,cAAA,MAAIC,UAAW,iBAAkBE,KAAKC,MAAMoF,KAAKpB,OACjDtE,EAAAC,EAAAC,cAAA,aAAKG,KAAKC,MAAMoF,KAAKnB,OACrBvE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAW,aAAjB,QACAH,EAAAC,EAAAC,cAAA,SAAO6B,KAAM,SAAU6D,aAAcvF,KAAKC,MAAMoF,KAAKG,SAAUhF,SAAU,SAACC,GAAD,OAAOI,EAAK4E,eAAehF,EAAGI,EAAKZ,MAAMkF,WAEtHxF,EAAAC,EAAAC,cAAA,KAAGC,UAAW,MAAO8C,QAAS,SAACnC,GAAD,OAAOI,EAAK6E,OAAOjF,EAAGI,EAAKZ,MAAMoF,QAA/D,kBAxBOlF,aA+BRC,cAAQ,KAAM,CAAEgF,eCpBD,SAACO,EAAKR,GAAN,OAAgB,SAAAnD,GAE1CA,EAAS,CACLN,KPHoC,+BOIpCiE,IAAKA,EACLR,MAAOA,MDegCG,eC3BjB,SAAAD,GAAI,OAAI,SAAArD,GAClCA,EAAS,CACLN,KPIwB,mBOHxB2D,KAAMA,ODwBCjF,CAAkD8E,GE9B3DU,2LAGerE,GACbA,EAAQc,KAAK,8CAMR,IACDwD,EADChF,EAAAb,KAEL,OAA+B,IAA1BA,KAAKC,MAAMuB,YAGZqE,EAAY7F,KAAKC,MAAM6F,KAAKrD,IAAI,SAAA4C,GAAI,OAChC1F,EAAAC,EAAAC,cAAA,OAAK8C,IAAK9B,EAAKZ,MAAM6F,KAAKC,QAAQV,IAC9B1F,EAAAC,EAAAC,cAACmG,EAAD,CAAUX,KAAMA,EAAMF,MAAOtE,EAAKZ,MAAM6F,KAAKC,QAAQV,QAMzD1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAS,eAAb,WAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAS8C,QAAS,kBAAM/B,EAAKoF,iBAAiBpF,EAAKZ,MAAMsB,WACrE5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAsBH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,cAAjB,sBAEvCH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aACT+F,EACDlG,EAAAC,EAAAC,cAAA,cAORF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,kBACmBH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,UAAT,aADnB,gBAxCDzB,aA0DJC,cARS,SAACyB,GACrB,MAAO,CACHiE,KAAMjE,EAAMiE,KAAKA,KACjBtE,WAAYK,EAAMC,OAAON,aAKO,GAAzBpB,CAA8BwF,GC1C9BM,mLAdP,OACIvG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,iDACkDH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,aAAT,wBADlD,gBANOzB,qBCGjBgG,2LAGe5E,GACbA,EAAQc,KAAK,+CAEPuB,EAASrC,GACf,IAAI8D,EAAOe,OAAOC,OAAO,CAACb,SAAU,GAAI5B,GACxC5D,KAAKC,MAAMqG,IAAIjB,GACf9D,EAAQc,KAAK,qDAObrC,KAAKuG,SAAU,mCAKV,IAAA1F,EAAAb,KACC4D,EAAU5D,KAAKC,MAAM6C,SAASD,OAAO,SAAAe,GACvC,OACIA,EAAQH,KAAO+C,OAAO3F,EAAKZ,MAAMwG,MAAMC,OAAOjD,MAEnD,GACH,YAAiBkD,IAAZ/C,EAGGjE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBACZH,EAAAC,EAAAC,cAAA,OAAK8C,IAAKiB,EAAQH,GAAI3D,UAAS,WAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAS8C,QAAS,kBAAM/B,EAAKoF,iBAAiBpF,EAAKZ,MAAMsB,WACzE5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAsBH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,cAAjB,UAEnCH,EAAAC,EAAAC,cAAA,OAAKgE,IAAK,UAAW/D,UAAS,aAAgBgE,IAAKF,EAAQG,MAC3DpE,EAAAC,EAAAC,cAACmE,EAAD,CAAQX,OAAQO,EAAQP,SACxB1D,EAAAC,EAAAC,cAAA,UAAK+D,EAAQK,OACbtE,EAAAC,EAAAC,cAAA,SAAI+D,EAAQgD,aACZjH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAW,SAAd,IAAyB8D,EAAQM,OACjCvE,EAAAC,EAAAC,cAAA,UACIC,UAAW,cACX8C,QAAS,kBAAM/B,EAAKgG,UAAUjD,EAAS/C,EAAKZ,MAAMsB,WACrD5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAO1BH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,iDACkDH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,aAAT,wBADlD,gBApDSzB,aAyEdC,cAVS,SAACyB,GACrB,MAAO,CACHiB,SAAUjB,EAAMiB,SAASC,aACzBP,WAAYX,EAAMiB,SAASN,WAC3BK,OAAQhB,EAAMiB,SAASD,OACvBrB,WAAYK,EAAMC,OAAON,aAKO,CAAE8E,IH9EvB,SAACjB,GAAD,OAAU,SAAArD,GACzBA,EAAS,CACLN,KPUmB,cOTnB2D,KAAMA,OG2ECjF,CAAkC+F,GCvE3CW,+LAGgC,IAA1B9G,KAAKC,MAAMuB,YACXxB,KAAKC,MAAMsB,QAAQc,KAAK,2CAQ5B,OACI1C,EAAAC,EAAAC,cAACkH,EAAA,EAAD,KAEIpH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,KAAM,SAAUC,UAAW1G,EAAOgB,QAASvB,KAAKC,MAAMsB,QAAS2F,OAAK,IAC3EvH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,KAAM,YAAaC,UAAW9C,EAAc5C,QAASvB,KAAKC,MAAMsB,QAAS2F,OAAK,IACrFvH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,KAAM,gBAAiBC,UAAWd,EAAgB5E,QAASvB,KAAKC,MAAMsB,QAAS2F,OAAK,IAC3FvH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,KAAM,QAASC,UAAWrB,EAAMrE,QAASvB,KAAKC,MAAMsB,QAAS2F,OAAK,IAEzEvH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQE,UAAWf,YApBd/F,aAmCNgH,cAAW/G,YANF,SAACyB,GACrB,MAAO,CACHL,WAAYK,EAAMC,OAAON,aAIkB,GAAzBpB,CAA6B0G,ICtCjDM,mLAGE,IAAIC,EAMJ,OAL+B,IAA1BrH,KAAKC,MAAMuB,aACZ6F,EACI1H,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,SAAQjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAIlCH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyH,EAAD,MACA3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAS,YAAf,OADJ,UAGCuH,GAGL1H,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC0H,EAAD,eAtBKC,IAAMrH,WAsChBC,cANS,SAACyB,GACrB,MAAO,CACHL,WAAYK,EAAMC,OAAON,aAIO,GAAzBpB,CAA6BgH,GChCxBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,sFChBAoB,EAAe,CACjB1G,SAAU,GACVE,SAAU,ICFRwG,EAAe,CACjB9E,aAAc,GACdP,WAAW,GACXK,OAAQ,ICHNgF,EAAe,CACjB3H,WAAW,GCDT2H,EAAe,CAGjBrG,YAAY,EACZO,eAAe,WCJb8F,EAAe,CACjB/B,KAAM,ICIKgC,cAAgB,CAC3B1G,MLDW,WAAwC,IAA9Bf,EAA8B0H,UAAAC,OAAA,QAAArB,IAAAoB,UAAA,GAAAA,UAAA,GAAtBF,EAAcI,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAApB,EAEnD,OAASsB,EAAOvG,MAEZ,IdNgB,WcOZ,OAAO0E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIc,SAAU8G,EAAOhG,kBAEzB,IdVgB,WcWZ,OAAOmE,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIgB,SAAU4G,EAAO/F,kBAEzB,QACI,OAAO7B,IKbfyC,SJDW,WAAwC,IAA9BzC,EAA8B0H,UAAAC,OAAA,QAAArB,IAAAoB,UAAA,GAAAA,UAAA,GAAtBF,EAAcI,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAApB,EAEnD,OAASsB,EAAOvG,MACZ,IfTc,SeUV,OAAO0E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIwC,OAAQoF,EAAOjF,aAGvB,IfjBsB,iBekBlB,OAAOoD,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEI0C,aAAckF,EAAOjD,kBAE7B,IfrBwB,mBesBpB,OAAOoB,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEImC,WAAYyF,EAAOhD,oBAE3B,QACI,OAAO5E,IIlBfC,OHJW,WAAwC,IAA9BD,EAA8B0H,UAAAC,OAAA,QAAArB,IAAAoB,UAAA,GAAAA,UAAA,GAAtBF,EAE7B,QAFmDE,UAAAC,OAAA,EAAAD,UAAA,QAAApB,GAEnCjF,MAEZ,IhBCqB,gBgBAjB,OAAO0E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIH,WAAW,IAEnB,IhBHoB,egBIhB,OAAOkG,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIH,WAAW,IAEnB,QACI,OAAOG,IGVfyB,OFFW,WAAwC,IAA9BzB,EAA8B0H,UAAAC,OAAA,QAAArB,IAAAoB,UAAA,GAAAA,UAAA,GAAtBF,EAAcI,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAApB,EAEnD,OAASsB,EAAOvG,MACZ,IjBRa,QiBST,OAAO0E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEImB,YAAY,IAEpB,IjBTc,SiBUV,OAAO4E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEImB,YAAY,IAEpB,IjBfmB,QiBgBf,OAAO4E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEI0B,cAAekG,EAAOxG,QAE9B,QACI,OAAOpB,IEhBfyF,KDNW,WAAwC,IAA9BzF,EAA8B0H,UAAAC,OAAA,QAAArB,IAAAoB,UAAA,GAAAA,UAAA,GAAtBF,EAAcI,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAApB,EAEnD,OAASsB,EAAOvG,MAEZ,IlBImB,ckBHf,OAAO0E,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIyF,KAAI,GAAA/F,OAAAqG,OAAA+B,EAAA,EAAA/B,CAAM/F,EAAMyF,MAAZ,CAAkBmC,EAAO5C,SAGrC,IlBDwB,mBkBGpB,OAAOe,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIyF,KAAMzF,EAAMyF,KAAKjD,OAAO,SAAAwC,GAAI,OAAI4C,EAAO5C,OAASA,MAGxD,IlBPoC,+BkBQhC,IAAI+C,EAAU/H,EAAMyF,KAEpB,OADAsC,EAAQH,EAAO9C,OAAOK,SAAWyC,EAAOtC,IACjCS,OAAA8B,EAAA,EAAA9B,CAAA,GACA/F,EADP,CAEIyF,KAAMsC,IAGd,QACI,OAAO/H,ME1BbgI,EAAa,CAACC,KAWLzG,EATD0G,YACVC,EALiB,GAOjBC,YACIC,IAAeC,WAAf,EAAmBN,GACnBX,OAAOkB,8BAAgClB,OAAOkB,iCCJtDC,IAASC,OAAOnJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAUlH,MAAOA,GAC7BlC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KAAehC,EAAAC,EAAAC,cAACmJ,EAAD,QAA2CC,SAASC,eAAe,SRuHhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzE,KAAK,SAAA0E,GACjCA,EAAaC","file":"static/js/main.f7e44a5e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Loader extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className={`loading ${this.props.isLoading === true ? 'show' : 'hide'}`}>\n                    Loading&#8230;\n                </div>\n            </div>\n        )\n\n\n    }\n\n}\n\nconst mapStateToProps = (state) => (state.loader);\n\nexport default connect(mapStateToProps, {})(Loader);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { changeUsername, changePassword, logIN } from \"../actions/loginActions\";\nimport { Link } from 'react-router-dom'\n\n\nclass Login extends Component {\n\n    onChange = (e) => {\n        e.preventDefault();\n        e.target.name === 'username' ? this.props.changeUsername(e.target.value) : this.props.changePassword(e.target.value);\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const post = {\n            username: this.props.login.username,\n            password: this.props.login.password\n        };\n\n        this.props.logIN(post, this.props.history);\n\n\n    };\n\n    render() {\n\n        if ( this.props.isLoggedIn === false ) {\n            return (\n                <div className={`login-container`}>\n                    <h4>Login</h4>\n                    <form onSubmit={this.onSubmit}>\n                        <div>\n                            <p className={`red ${this.props.error === true ? 'show' : 'hide'}`}>\n                                **Try \"admin\" and \"password\" for your credentials**\n                            </p>\n                        </div>\n                        <div>\n                            <label>Username</label>\n                            <input type=\"text\" name=\"username\" onChange={this.onChange} value={this.props.username}/>\n                        </div>\n                        <div>\n                            <label>Password</label>\n                            <input type=\"password\" name=\"password\" onChange={this.onChange} value={this.props.password}/>\n                        </div>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h3 className={'center'}>\n                        You are already logged in. Why don't you <Link to=\"/products\">browse our products?</Link> ...\n                    </h3>\n                </div>\n            )\n        }\n    }\n\n\n}\n\n\nconst mapStateToProps = (store) => ({\n    login: store.login,\n    isLoggedIn: store.states.isLoggedIn,\n    error: store.states.loggedInError\n});\n\nexport default connect(mapStateToProps, { changeUsername, changePassword, logIN })(Login);","import { USERNAME, PASSWORD, LOGIN, START_LOADING, STOP_LOADING, LOGIN_ERROR } from './types'\n\nexport const logIN = (post, redirect) => dispatch => {\n\n    dispatch({ type: START_LOADING });\n    setTimeout(function () {\n        if ( post.username === 'admin' && post.password === 'password' ) {\n\n            //TODO Make a loading overlay\n            //TODO If password matched then hide overlay and make real API call to products\n            dispatch({\n                type: LOGIN\n            });\n            redirect.push('/products');\n        } else {\n            //TODO If password DIDN'T match hide overlay and display error\n            dispatch({type: LOGIN_ERROR, error: true});\n        }\n\n\n\n        dispatch({ type: STOP_LOADING });\n\n\n    }, 1500);\n\n};\n\nexport const changeUsername = username => dispatch => {\n    dispatch({\n        type: USERNAME,\n        updatedUsername: username,\n    })\n};\n\nexport const changePassword = password => ({\n    type: PASSWORD,\n    updatedPassword: password\n});","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\nexport const FILTER = 'FILTER';\n\nexport const LOGIN = 'LOGIN';\nexport const USERNAME = 'USERNAME';\nexport const PASSWORD = 'PASSWORD';\nexport const LOGIN_ERROR = 'ERROR';\nexport const LOGOUT = 'LOGOUT';\n\n\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CHANGE_QUANTITY_OF_CART_ITEM = 'CHANGE_QUANTITY_OF_CART_ITEM';","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { filter } from \"../actions/productActions\";\n\n\nclass Categories extends Component {\n\n\n    componentWillMount() {\n\n    }\n\n    render() {\n        if ( this.props.isLoggedIn === true ) {\n            const postCategories = this.props.categories.map(category => (\n                <div key={category} className={`category`}>\n                    <button onClick={() => this.props.filter(category)} className={'category-link'}>{category}</button>\n                </div>\n            ));\n\n            return (\n                <div className={`categories`}>\n                    <div>\n                        Filters:\n                    </div>\n                    {postCategories}\n                    <div className={'categories-remove'}>\n                        <button onClick={() => this.props.filter('none')} className={'category-link'}>Remove Filters</button>\n                    </div>\n                </div>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\n\n\nconst mapStateToProps = (store) => {\n    return {\n        products: store.products.productsList,\n        categories: store.products.categories,\n        isLoggedIn: store.states.isLoggedIn\n    };\n};\n\n\nexport default connect(mapStateToProps, { filter })(Categories);","import { FETCH_PRODUCTS, FETCH_CATEGORIES, FILTER } from './types'\n\nexport const fetchProducts = () => dispatch => {\n    fetch('https://my-json-server.typicode.com/tdmichaelis/json-api/products')\n        .then(res => res.json())\n        .then(data => {\n            dispatch({\n                type: FETCH_PRODUCTS,\n                updatedProducts: data\n            })\n        })\n};\n\nexport const fetchCategories = () => dispatch => {\n    fetch('https://my-json-server.typicode.com/tdmichaelis/typicode/categories')\n        .then(res => res.json())\n        .then(data => {\n            dispatch({\n                type: FETCH_CATEGORIES,\n                updatedCategories: data\n            })\n        })\n};\n\n\nexport const filter = filterName => dispatch => {\n    dispatch({\n        type: FILTER,\n        filterName: filterName,\n    })\n};","import React, { Component } from 'react'\n\n\nexport default class Rating extends Component {\n\n    render() {\n\n        const fullStars = (Math.floor(this.props.rating) + ((this.props.rating % 1) > .7 ? 1 : 0));\n\n        return (\n            <div className=\"rating\">\n                <span className={fullStars >= 1 ? 'full-star' : 'empty-star'}>\n                    {String.fromCharCode(9733)}\n                </span>\n                <span className={fullStars >= 2 ? 'full-star' : 'empty-star'}>\n                    {String.fromCharCode(9733)}\n                </span>\n                <span className={fullStars >= 3 ? 'full-star' : 'empty-star'}>\n                    {String.fromCharCode(9733)}\n                </span>\n                <span className={fullStars >= 4 ? 'full-star' : 'empty-star'}>\n                    {String.fromCharCode(9733)}\n                </span>\n                <span className={fullStars >= 5 ? 'full-star' : 'empty-star'}>\n                    {String.fromCharCode(9733)}\n                </span>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport Rating from './Rating'\n\n\nclass Product extends Component {\n\n    redirectToProduct(id) {\n\n        this.props.history.push({\n            pathname: '/products/'+id,\n            id: id\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div className={`product`} onClick={() => this.redirectToProduct(this.props.product.id)}>\n                <img alt={'product'} className={`list-image`} src={this.props.product.img}/>\n                <Rating rating={this.props.product.rating}/>\n                <h4 className={'product-title'}>{this.props.product.title}</h4>\n                <p>${this.props.product.price}</p>\n            </div>\n        );\n    }\n\n}\n\nexport default Product;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchProducts, fetchCategories } from \"../actions/productActions\";\nimport Categories from './Categories'\nimport Product from './Product'\nimport { Link } from 'react-router-dom'\n\n\nclass ProductsList extends Component {\n\n\n    componentDidMount() {\n        //This should realistically be in an action function,\n        this.props.fetchProducts();\n        this.props.fetchCategories();\n    }\n\n    render() {\n        let postProducts;\n        if ( this.props.isLoggedIn === true ) {\n\n                let filteredProducts = [];\n                this.props.products.map(product => {\n                    if ( product.category.includes(this.props.filter ) ) {\n                        filteredProducts.push(product);\n                    }\n                    return '';\n\n                });\n                postProducts = filteredProducts.map(product => (\n                    <Product key={product.id} product={product} history={this.props.history} />\n                ));\n\n            return (\n                <div className=\"content\">\n                    <h1 className={`products-header`}>\n\n                        Products\n                    </h1>\n                    <Categories/>\n                    <div className={`product-list`}>\n                        {postProducts}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h3 className={'center'}>\n                        You Need to be <Link to=\"/login\">logged in</Link> ...\n                    </h3>\n                </div>\n            )\n        }\n    }\n}\n\nProductsList.propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    fetchCategories: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    categories: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        products: store.products.productsList,\n        categories: store.products.categories,\n        filter: store.products.filter,\n        isLoggedIn: store.states.isLoggedIn\n    };\n};\n\n\nexport default connect(mapStateToProps, { fetchProducts, fetchCategories })(ProductsList);","import React, { Component } from 'react'\nimport { updateQuantity, deleteCartItem } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\n\n\nclass CartItem extends Component {\n\n\n    changeQuantity(e, index) {\n        e.preventDefault();\n        this.props.updateQuantity(e.target.value ,index)\n    }\n\n    delete(e, item) {\n        e.preventDefault();\n        this.props.deleteCartItem(item)\n\n    }\n\n\n    render() {\n        return (\n            <div className={`cart-item`} >\n                <img alt={'item'} className={`item-image`} src={this.props.item.img}/>\n                <h4 className={'product-title'}>{this.props.item.title}</h4>\n                <p>${this.props.item.price}</p>\n                <div>\n                    <span className={'qty-label'}>QTY:</span>\n                    <input type={'number'} defaultValue={this.props.item.quantity} onChange={(e) => this.changeQuantity(e, this.props.index)}/>\n                </div>\n                <p className={'red'} onClick={(e) => this.delete(e, this.props.item)}>Remove</p>\n            </div>\n        );\n    }\n\n}\n\nexport default connect(null, { updateQuantity, deleteCartItem })(CartItem);","import { ADD_TO_CART, REMOVE_FROM_CART, CHANGE_QUANTITY_OF_CART_ITEM } from './types'\n\nexport const add = (item) => dispatch => {\n    dispatch({\n        type: ADD_TO_CART,\n        item: item,\n    })\n};\n\nexport const deleteCartItem = item => dispatch => {\n    dispatch({\n        type: REMOVE_FROM_CART,\n        item: item,\n    })\n};\n\nexport const updateQuantity = (qty, index) => dispatch => {\n\n    dispatch({\n        type: CHANGE_QUANTITY_OF_CART_ITEM,\n        qty: qty,\n        index: index\n    })\n};\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport CartItem from './CartItem'\nimport { Link } from 'react-router-dom'\n\n\nclass Cart extends Component {\n\n\n    returnToProducts(history) {\n        history.push('/products')\n    }\n\n    // onClick={() => this.redirectToProduct(this.props.history)}\n\n\n    render() {\n        let cartItems;\n        if ( this.props.isLoggedIn === true ) {\n\n\n            cartItems = this.props.cart.map(item => (\n                <div key={this.props.cart.indexOf(item)}>\n                    <CartItem item={item} index={this.props.cart.indexOf(item)} />\n                </div>\n\n            ));\n\n            return (\n                <div className=\"content\">\n                    <h1 className={`cart-header`}>\n                        My Cart\n                    </h1>\n                    <div className={'float'} onClick={() => this.returnToProducts(this.props.history)}>\n                        <i className=\"fas fa-chevron-left\"><span className={'inside-fas'}>Back to Products</span></i>\n                    </div>\n                    <div className={`cart-list`}>\n                        {cartItems}\n                        <hr/>\n\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h3 className={'center'}>\n                        You Need to be <Link to=\"/login\">logged in</Link> ...\n                    </h3>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (store) => {\n    return {\n        cart: store.cart.cart,\n        isLoggedIn: store.states.isLoggedIn\n    };\n};\n\n\nexport default connect(mapStateToProps, { })(Cart);","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nclass Error404 extends Component {\n\n\n    render() {\n        return (\n            <div>\n                <h3 className={'center'}>\n                    Sorry, we can't find this page, how about you <Link to=\"/products\">browse our products?</Link> ...\n                </h3>\n            </div>\n        )\n\n    }\n\n\n}\n\n\nexport default Error404;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { add } from \"../actions/cartActions\";\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\n\nclass ProductDetails extends Component {\n\n\n    returnToProducts(history) {\n        history.push('/products')\n    }\n    addToCart(product, history) {\n        let item = Object.assign({quantity: 1}, product);\n        this.props.add(item);\n        history.push('/cart')\n\n\n\n    }\n\n    componentDidMount() {\n        this.message = false;\n\n\n    }\n\n    render() {\n        const product = this.props.products.filter(product => {\n            return (\n                product.id === Number(this.props.match.params.id)\n            )\n        })[0];\n        if ( product !== undefined ) {\n\n            return (\n                <div className={'product-details'}>\n                    <div key={product.id} className={`product`}>\n                        <div className={'float'} onClick={() => this.returnToProducts(this.props.history)}>\n                        <i className=\"fas fa-chevron-left\"><span className={'inside-fas'}>Back</span></i>\n                        </div>\n                        <img alt={'product'} className={`list-image`} src={product.img}/>\n                        <Rating rating={product.rating}/>\n                        <h3>{product.title}</h3>\n                        <p>{product.description}</p>\n                        <div className={'payment'}>\n                            <p className={'price'}>${product.price}</p>\n                            <button\n                                className={'cart-button'}\n                                onClick={() => this.addToCart(product, this.props.history)}\n                            ><i className=\"fas fa-cart-plus\"></i></button>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h3 className={'center'}>\n                        Sorry, we can't find this page, how about you <Link to=\"/products\">browse our products?</Link> ...\n                    </h3>\n                </div>\n            )\n        }\n\n    }\n}\n\n\nconst mapStateToProps = (store) => {\n    return {\n        products: store.products.productsList,\n        categories: store.products.categories,\n        filter: store.products.filter,\n        isLoggedIn: store.states.isLoggedIn,\n    };\n};\n\n\nexport default connect(mapStateToProps, { add })(ProductDetails);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Login from \"./Login\";\nimport ProductsList from './ProductsList'\nimport Cart from \"./Cart\";\nimport Error404 from \"./Error404\";\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport ProductDetails from \"./ProductDetails\";\n\nclass Router extends Component {\n\n    componentDidMount() {\n        if (this.props.isLoggedIn === false) {\n            this.props.history.push('/login')\n        }\n    }\n\n    render() {\n\n\n\n        return (\n            <Switch>\n\n                <Route path={\"/login\"} component={Login} history={this.props.history} exact />\n                <Route path={\"/products\"} component={ProductsList} history={this.props.history} exact />\n                <Route path={\"/products/:id\"} component={ProductDetails} history={this.props.history} exact />\n                <Route path={\"/cart\"} component={Cart} history={this.props.history} exact />\n\n                <Route  component={Error404}  />\n\n            </Switch>\n        );\n\n    }\n}\n\n\nconst mapStateToProps = (store) => {\n    return {\n        isLoggedIn: store.states.isLoggedIn\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, {})(Router));\n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport Loader from './Loader'\nimport Router from './Router'\nimport { Link } from 'react-router-dom'\n\nclass Storefront extends React.Component {\n\n    render() {\n        let links;\n        if ( this.props.isLoggedIn === true ) {\n            links = (\n                <Link to=\"/cart\"><i className=\"fas fa-shopping-cart go-to-cart\"></i></Link>\n            )\n        }\n        return (\n            <div>\n                <Loader/>\n                <div className=\"App Container\">\n                    <header className=\"header\">\n                        <h1>\n                            <span className={`overline`}>the</span> Store\n                        </h1>\n                        {links}\n\n                    </header>\n                    <hr/>\n\n                    <Router/>\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStoreToProps = (store) => {\n    return {\n        isLoggedIn: store.states.isLoggedIn\n    };\n};\n\nexport default connect(mapStoreToProps, {})(Storefront);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { USERNAME, PASSWORD } from '../actions/types'\n\nconst initialState = {\n    username: '',\n    password: ''\n};\n\nexport default function (state = initialState, action) {\n\n    switch ( action.type ) {\n\n        case USERNAME:\n            return {\n                ...state,\n                username: action.updatedUsername\n            };\n        case PASSWORD:\n            return {\n                ...state,\n                password: action.updatedPassword\n            };\n        default:\n            return state;\n    }\n}","import { FETCH_PRODUCTS, FETCH_CATEGORIES, FILTER } from '../actions/types'\n\nconst initialState = {\n    productsList: [],\n    categories:[],\n    filter: ''\n};\n\nexport default function (state = initialState, action) {\n\n    switch ( action.type ) {\n        case FILTER:\n            return {\n                ...state,\n                filter: action.filterName\n            };\n\n        case FETCH_PRODUCTS:\n            return {\n                ...state,\n                productsList: action.updatedProducts\n            };\n        case FETCH_CATEGORIES:\n            return {\n                ...state,\n                categories: action.updatedCategories\n            };\n        default:\n            return state;\n    }\n}\n","import { START_LOADING, STOP_LOADING } from '../actions/types'\n\nconst initialState = {\n    isLoading: false\n};\n\nexport default function (state = initialState, action) {\n\n    switch ( action.type ) {\n\n        case START_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case STOP_LOADING:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","import { LOGIN, LOGOUT, LOGIN_ERROR } from '../actions/types'\n\nconst initialState = {\n\n    //TODO Change this to false\n    isLoggedIn: true,\n    loggedInError: false\n};\n\nexport default function (state = initialState, action) {\n\n    switch ( action.type ) {\n        case LOGIN:\n            return {\n                ...state,\n                isLoggedIn: true\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false\n            };\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                loggedInError: action.error\n            };\n        default:\n            return state;\n    }\n}\n","import { ADD_TO_CART, REMOVE_FROM_CART, CHANGE_QUANTITY_OF_CART_ITEM } from '../actions/types'\n\nconst initialState = {\n    cart: []\n};\n\nexport default function (state = initialState, action) {\n\n    switch ( action.type ) {\n\n        case ADD_TO_CART: {\n            return {\n                ...state,\n                cart: [...state.cart, action.item]\n            };\n        }\n        case REMOVE_FROM_CART: {\n\n            return {\n                ...state,\n                cart: state.cart.filter(item => action.item !== item),\n            };\n        }\n        case CHANGE_QUANTITY_OF_CART_ITEM: {\n            let newCart = state.cart;\n            newCart[action.index].quantity = action.qty;\n            return {\n                ...state,\n                cart: newCart\n            };\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport loginReducer from './loginReducer'\nimport productReducer from './productsReducer'\nimport loaderReducer from './loaderReducer'\nimport statesReducer from './statesReducer'\nimport cartReducer from './cartReducer'\n\nexport default combineReducers({\n    login: loginReducer,\n    products: productReducer,\n    loader: loaderReducer,\n    states: statesReducer,\n    cart: cartReducer\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport Storefront from './components/Storefront';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(<Provider store={store}>\n    <BrowserRouter ><Storefront /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}